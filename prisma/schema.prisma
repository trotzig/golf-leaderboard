// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String    @default(cuid()) @id
  email               String    @unique
  authToken           String?   @unique
  sendEmailOnFinished Boolean   @default(true)
  createdAt           DateTime  @default(now())
  favorites           Favorite[]
}

model SignInAttempt {
  id           String    @default(cuid()) @id
  email        String
  token        String    @unique
  confirmedAt  DateTime?
  createdAt    DateTime  @default(now())
}

model Favorite {
  id        String  @default(cuid()) @id
  playerId  String
  account   Account @relation(fields: [accountId], references: [id])
  accountId String
  @@unique([accountId, playerId])
}

model ResultNotified {
  id             String  @default(cuid()) @id
  roundNumber    Int
  competitionId  Int
  playerId       String
  createdAt      DateTime @default(now())
  @@unique([roundNumber, competitionId, playerId])
}

model Player {
  id          String    @id
  slug        String    @unique
  firstName   String
  lastName    String
  clubName    String?
  oomPosition String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  competitionScore PlayerCompetitionScore[]
}

model PlayerCompetitionScore {
  playerId      String
  competitionId Int
  position      String
  scoreText     String
  score         Int
  player        Player @relation(fields: [playerId], references: [id])
  competition   Competition @relation(fields: [competitionId], references: [id])
  @@id([playerId, competitionId])
}

model Competition {
  id               Int     @id
  name             String
  clubName         String?
  venue            String?
  start            DateTime
  end              DateTime
  competitionScore PlayerCompetitionScore[]
}
